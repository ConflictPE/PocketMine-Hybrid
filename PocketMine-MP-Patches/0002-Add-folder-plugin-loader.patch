From 9ae65798bcba07259fed0cbbd2f6ef8753c8fac4 Mon Sep 17 00:00:00 2001
From: JackNoordhuis <daswaggamer@gmail.com>
Date: Sun, 4 Mar 2018 00:02:21 +1100
Subject: [PATCH] Add folder plugin loader


diff --git a/src/pocketmine/Server.php b/src/pocketmine/Server.php
index aeb3904..0a992ad 100644
--- a/src/pocketmine/Server.php
+++ b/src/pocketmine/Server.php
@@ -83,6 +83,7 @@ use pocketmine\network\rcon\RCON;
 use pocketmine\network\upnp\UPnP;
 use pocketmine\permission\BanList;
 use pocketmine\permission\DefaultPermissions;
+use pocketmine\plugin\FolderPluginLoader;
 use pocketmine\plugin\PharPluginLoader;
 use pocketmine\plugin\Plugin;
 use pocketmine\plugin\PluginLoadOrder;
@@ -1616,6 +1617,9 @@ class Server{
 			$this->profilingTickRate = (float) $this->getProperty("settings.profile-report-trigger", 20);
 			$this->pluginManager->registerInterface(PharPluginLoader::class);
 			$this->pluginManager->registerInterface(ScriptPluginLoader::class);
+			if($this->getProperty("folder-plugin-loader", false)) {
+				$this->pluginManager->registerInterface(FolderPluginLoader::class);
+			}
 
 			register_shutdown_function([$this, "crashDump"]);
 
diff --git a/src/pocketmine/plugin/FolderPluginLoader.php b/src/pocketmine/plugin/FolderPluginLoader.php
new file mode 100644
index 00000000..09bad2e
--- /dev/null
+++ b/src/pocketmine/plugin/FolderPluginLoader.php
@@ -0,0 +1,147 @@
+<?php
+
+/*
+ *
+ *   ____            _        _   __  __ _                  __  __ ____
+ *  |  _ \ ___   ___| | _____| |_|  \/  (_)_ __   ___      |  \/  |  _ \
+ *  | |_) / _ \ / __| |/ / _ \ __| |\/| | | '_ \ / _ \_____| |\/| | |_) |
+ *  |  __/ (_) | (__|   <  __/ |_| |  | | | | | |  __/_____| |  | |  __/
+ *  |_|   \___/ \___|_|\_\___|\__|_|  |_|_|_| |_|\___|     |_|  |_|_|
+ *
+ *  This program is free software: you can redistribute it and/or modify
+ *  it under the terms of the GNU Lesser General Public License as published by
+ *  the Free Software Foundation, either version 3 of the License, or
+ *  (at your option) any later version.
+ *
+ *  @author PocketMine Team
+ *  @link http://www.pocketmine.net/
+ *
+ *
+*/
+
+declare(strict_types=1);
+
+namespace pocketmine\plugin;
+
+use pocketmine\event\plugin\PluginDisableEvent;
+use pocketmine\event\plugin\PluginEnableEvent;
+use pocketmine\Server;
+use pocketmine\utils\TextFormat;
+
+class FolderPluginLoader implements PluginLoader{
+
+	/** @var Server */
+	private $server;
+
+	/**
+	 * @param Server $server
+	 */
+	public function __construct(Server $server){
+		$this->server = $server;
+	}
+
+	/**
+	 * Loads the plugin contained in $file
+	 *
+	 * @param string $file
+	 *
+	 * @return Plugin|null
+	 */
+	public function loadPlugin(string $file){
+		if(is_dir($file) and file_exists($file . "/plugin.yml") and file_exists($file . "/src/")){
+			if(($description = $this->getPluginDescription($file)) instanceof PluginDescription){
+				$logger = $this->server->getLogger();
+
+				$logger->info(TextFormat::LIGHT_PURPLE . "Loading source plugin " . $description->getFullName());
+				$dataFolder = dirname($file) . DIRECTORY_SEPARATOR . $description->getName();
+				if(file_exists($dataFolder) and !is_dir($dataFolder)){
+					$logger->warning("Projected dataFolder '" . $dataFolder . "' for source plugin " . $description->getName() . " exists and is not a directory");
+
+					return null;
+				}
+
+
+				$className = $description->getMain();
+				$this->server->getLoader()->addPath($file . "/src");
+
+				if(class_exists($className, true)){
+					$plugin = new $className();
+					$this->initPlugin($plugin, $description, $dataFolder, $file);
+
+					return $plugin;
+				}else{
+					$logger->warning("Couldn't load source plugin " . $description->getName() . ": main class not found");
+
+					return null;
+				}
+			}
+		}
+
+		return null;
+	}
+
+	/**
+	 * Gets the PluginDescription from the file
+	 *
+	 * @param string $file
+	 *
+	 * @return null|PluginDescription
+	 */
+	public function getPluginDescription(string $file){
+		if(is_dir($file) and file_exists($file . "/plugin.yml")){
+			$yaml = @file_get_contents($file . "/plugin.yml");
+			if($yaml != ""){
+				return new PluginDescription($yaml);
+			}
+		}
+
+		return null;
+	}
+
+	/**
+	 * Returns the filename patterns that this loader accepts
+	 *
+	 * @return string
+	 */
+	public function getPluginFilters() : string{
+		return "/[^\\.]/";
+	}
+
+	/**
+	 * @param PluginBase        $plugin
+	 * @param PluginDescription $description
+	 * @param string            $dataFolder
+	 * @param string            $file
+	 */
+	private function initPlugin(PluginBase $plugin, PluginDescription $description, $dataFolder, $file){
+		$plugin->init($this, $this->server, $description, $dataFolder, $file);
+		$plugin->onLoad();
+	}
+
+	/**
+	 * @param Plugin $plugin
+	 */
+	public function enablePlugin(Plugin $plugin){
+		if($plugin instanceof PluginBase and !$plugin->isEnabled()){
+			$this->server->getLogger()->info($this->server->getLanguage()->translateString("pocketmine.plugin.enable", [$plugin->getDescription()->getFullName()]));
+
+			$plugin->setEnabled(true);
+
+			$this->server->getPluginManager()->callEvent(new PluginEnableEvent($plugin));
+		}
+	}
+
+	/**
+	 * @param Plugin $plugin
+	 */
+	public function disablePlugin(Plugin $plugin){
+		if($plugin instanceof PluginBase and $plugin->isEnabled()){
+			$this->server->getLogger()->info($this->server->getLanguage()->translateString("pocketmine.plugin.disable", [$plugin->getDescription()->getFullName()]));
+
+			$this->server->getPluginManager()->callEvent(new PluginDisableEvent($plugin));
+
+			$plugin->setEnabled(false);
+		}
+	}
+
+}
\ No newline at end of file
diff --git a/src/pocketmine/resources/pocketmine.yml b/src/pocketmine/resources/pocketmine.yml
index 3446dd7..19be42b 100644
--- a/src/pocketmine/resources/pocketmine.yml
+++ b/src/pocketmine/resources/pocketmine.yml
@@ -23,6 +23,8 @@ settings:
  #Set this approximately to your number of cores.
  #If set to auto, it'll try to detect the number of cores (or use 2)
  async-workers: auto
+ #Load source plugins automatically?
+ folder-plugin-loader: false
 
 memory:
  #Global soft memory limit in megabytes. Set to 0 to disable
@@ -104,7 +106,7 @@ debug:
  level: 1
  #Enables /status, /gc
  commands: false
- 
+
 player:
  #Choose whether to enable player data saving.
  save-player-data: true
-- 
2.6.4

